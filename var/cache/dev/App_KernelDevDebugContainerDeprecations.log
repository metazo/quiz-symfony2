a:28:{i:0;a:6:{s:4:"type";i:16384;s:7:"message";s:362:"Method "Symfony\Component\DependencyInjection\Extension\ExtensionInterface::getNamespace()" might add "string" as a native return type declaration in the future. Do the same in implementation "Sensio\Bundle\FrameworkExtraBundle\DependencyInjection\SensioFrameworkExtraExtension" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:117:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:112:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/http-kernel/Bundle/Bundle.php";s:4:"line";i:152;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:1;a:6:{s:4:"type";i:16384;s:7:"message";s:296:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::supports()" might add "bool" as a native return type declaration in the future. Do the same in implementation "App\Security\LoginFormAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:117:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:125:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:2;a:6:{s:4:"type";i:16384;s:7:"message";s:303:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::getCredentials()" might add "mixed" as a native return type declaration in the future. Do the same in implementation "App\Security\LoginFormAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:117:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:125:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:3;a:6:{s:4:"type";i:16384;s:7:"message";s:305:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::getUser()" might add "?UserInterface" as a native return type declaration in the future. Do the same in implementation "App\Security\LoginFormAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:117:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:125:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:4;a:6:{s:4:"type";i:16384;s:7:"message";s:304:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::checkCredentials()" might add "bool" as a native return type declaration in the future. Do the same in implementation "App\Security\LoginFormAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:117:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:125:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:5;a:6:{s:4:"type";i:16384;s:7:"message";s:316:"Method "Symfony\Component\Security\Guard\AuthenticatorInterface::onAuthenticationSuccess()" might add "?Response" as a native return type declaration in the future. Do the same in implementation "App\Security\LoginFormAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:117:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:125:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:6;a:6:{s:4:"type";i:16384;s:7:"message";s:320:"Method "Symfony\Component\Security\Guard\Authenticator\AbstractFormLoginAuthenticator::getLoginUrl()" might add "string" as a native return type declaration in the future. Do the same in child class "App\Security\LoginFormAuthenticator" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:117:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:125:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:7;a:6:{s:4:"type";i:8192;s:7:"message";s:229:"Return type of Symfony\Component\Form\Form::getIterator() should either be compatible with IteratorAggregate::getIterator(): Traversable, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:96:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/form/Form.php";s:4:"line";i:1001;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:137:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/framework-bundle/DependencyInjection/Configuration.php";s:4:"line";i:165;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:8;a:6:{s:4:"type";i:8192;s:7:"message";s:236:"Return type of Symfony\Component\Form\Form::offsetExists($name) should either be compatible with ArrayAccess::offsetExists(mixed $offset): bool, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:96:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/form/Form.php";s:4:"line";i:949;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:137:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/framework-bundle/DependencyInjection/Configuration.php";s:4:"line";i:165;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:9;a:6:{s:4:"type";i:8192;s:7:"message";s:231:"Return type of Symfony\Component\Form\Form::offsetGet($name) should either be compatible with ArrayAccess::offsetGet(mixed $offset): mixed, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:96:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/form/Form.php";s:4:"line";i:963;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:137:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/framework-bundle/DependencyInjection/Configuration.php";s:4:"line";i:165;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:10;a:6:{s:4:"type";i:8192;s:7:"message";s:252:"Return type of Symfony\Component\Form\Form::offsetSet($name, $child) should either be compatible with ArrayAccess::offsetSet(mixed $offset, mixed $value): void, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:96:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/form/Form.php";s:4:"line";i:979;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:137:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/framework-bundle/DependencyInjection/Configuration.php";s:4:"line";i:165;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:11;a:6:{s:4:"type";i:8192;s:7:"message";s:234:"Return type of Symfony\Component\Form\Form::offsetUnset($name) should either be compatible with ArrayAccess::offsetUnset(mixed $offset): void, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:96:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/form/Form.php";s:4:"line";i:991;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:137:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/framework-bundle/DependencyInjection/Configuration.php";s:4:"line";i:165;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:12;a:6:{s:4:"type";i:8192;s:7:"message";s:201:"Return type of Symfony\Component\Form\Form::count() should either be compatible with Countable::count(): int, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:96:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/form/Form.php";s:4:"line";i:1011;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:137:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/framework-bundle/DependencyInjection/Configuration.php";s:4:"line";i:165;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:13;a:6:{s:4:"type";i:16384;s:7:"message";s:245:"Method "ArrayAccess::offsetSet()" might add "void" as a native return type declaration in the future. Do the same in implementation "Symfony\Component\Form\Form" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:117:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:137:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/framework-bundle/DependencyInjection/Configuration.php";s:4:"line";i:165;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:14;a:6:{s:4:"type";i:16384;s:7:"message";s:247:"Method "ArrayAccess::offsetUnset()" might add "void" as a native return type declaration in the future. Do the same in implementation "Symfony\Component\Form\Form" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:117:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:137:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/framework-bundle/DependencyInjection/Configuration.php";s:4:"line";i:165;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:15;a:6:{s:4:"type";i:16384;s:7:"message";s:152:"Since symfony/dependency-injection 5.2: The "Symfony\Component\DependencyInjection\Alias::setPrivate()" method is deprecated, use "setPublic()" instead.";s:4:"file";s:113:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/dependency-injection/Alias.php";s:4:"line";i:61;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:142:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/framework-bundle/DependencyInjection/FrameworkExtension.php";s:4:"line";i:897;s:8:"function";s:10:"setPrivate";s:5:"class";s:43:"Symfony\Component\DependencyInjection\Alias";s:4:"type";s:2:"->";}}s:5:"count";i:3;}i:16;a:6:{s:4:"type";i:8192;s:7:"message";s:246:"Return type of Symfony\Component\Security\Core\Exception\AuthenticationException::__wakeup() should either be compatible with Exception::__wakeup(): void, or the #[\ReturnTypeWillChange] attribute should be used to temporarily suppress the notice";s:4:"file";s:134:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/security-core/Exception/AuthenticationException.php";s:4:"line";i:115;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:142:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/framework-bundle/DependencyInjection/FrameworkExtension.php";s:4:"line";i:1071;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:17;a:6:{s:4:"type";i:16384;s:7:"message";s:157:"Since symfony/dependency-injection 5.2: The "Symfony\Component\DependencyInjection\Definition::setPrivate()" method is deprecated, use "setPublic()" instead.";s:4:"file";s:118:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/dependency-injection/Definition.php";s:4:"line";i:610;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:142:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/framework-bundle/DependencyInjection/FrameworkExtension.php";s:4:"line";i:806;s:8:"function";s:10:"setPrivate";s:5:"class";s:48:"Symfony\Component\DependencyInjection\Definition";s:4:"type";s:2:"->";}}s:5:"count";i:2;}i:18;a:6:{s:4:"type";i:16384;s:7:"message";s:115:"Since doctrine/doctrine-migrations-bundle 2.2: The "dir_name" option is deprecated. Use "migrations_paths" instead.";s:4:"file";s:114:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/config/Definition/ArrayNode.php";s:4:"line";i:241;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:113:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/config/Definition/BaseNode.php";s:4:"line";i:455;s:8:"function";s:13:"finalizeValue";s:5:"class";s:45:"Symfony\Component\Config\Definition\ArrayNode";s:4:"type";s:2:"->";}}s:5:"count";i:2;}i:19;a:6:{s:4:"type";i:16384;s:7:"message";s:116:"Since doctrine/doctrine-migrations-bundle 2.2: The "namespace" option is deprecated. Use "migrations_paths" instead.";s:4:"file";s:114:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/config/Definition/ArrayNode.php";s:4:"line";i:241;s:5:"trace";a:1:{i:0;a:5:{s:4:"file";s:113:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/config/Definition/BaseNode.php";s:4:"line";i:455;s:8:"function";s:13:"finalizeValue";s:5:"class";s:45:"Symfony\Component\Config\Definition\ArrayNode";s:4:"type";s:2:"->";}}s:5:"count";i:2;}i:20;a:6:{s:4:"type";i:16384;s:7:"message";s:273:"Method "Symfony\Component\Security\Core\User\UserInterface::getSalt()" might add "?string" as a native return type declaration in the future. Do the same in implementation "App\Entity\User" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:117:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:157:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/http-kernel/DependencyInjection/RegisterControllerArgumentLocatorsPass.php";s:4:"line";i:170;s:8:"function";s:14:"is_subclass_of";}}s:5:"count";i:1;}i:21;a:6:{s:4:"type";i:16384;s:7:"message";s:341:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:117:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:125:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:22;a:6:{s:4:"type";i:16384;s:7:"message";s:343:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:117:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:125:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:23;a:6:{s:4:"type";i:16384;s:7:"message";s:347:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:117:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:125:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:24;a:6:{s:4:"type";i:16384;s:7:"message";s:342:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:117:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:125:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:25;a:6:{s:4:"type";i:16384;s:7:"message";s:341:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:117:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:125:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:26;a:6:{s:4:"type";i:16384;s:7:"message";s:342:"Method "Symfony\Component\EventDispatcher\EventSubscriberInterface::getSubscribedEvents()" might add "array" as a native return type declaration in the future. Do the same in implementation "Sensio\Bundle\FrameworkExtraBundle\EventListener\IsGrantedListener" now to avoid errors or add an explicit @return annotation to suppress this message.";s:4:"file";s:117:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/error-handler/DebugClassLoader.php";s:4:"line";i:325;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:125:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/config/Resource/ClassExistenceResource.php";s:4:"line";i:78;s:8:"function";s:12:"class_exists";}}s:5:"count";i:1;}i:27;a:6:{s:4:"type";i:16384;s:7:"message";s:141:"Since symfony/cache 5.4: "Symfony\Component\Cache\DoctrineProvider" is deprecated, use "Doctrine\Common\Cache\Psr6\DoctrineProvider" instead.";s:4:"file";s:117:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/deprecation-contracts/function.php";s:4:"line";i:25;s:5:"trace";a:1:{i:0;a:3:{s:4:"file";s:109:"/Applications/MAMP/htdocs/W-PHP-502-STG-2-1-Quiz-smain1.benai/quizz/vendor/symfony/cache/DoctrineProvider.php";s:4:"line";i:33;s:8:"function";s:19:"trigger_deprecation";}}s:5:"count";i:4;}}